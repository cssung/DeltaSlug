using UnityEngine;
using System.Collections;

public class State  {
    public State () {
    }

    public virtual void Update (Enemy e) {
		Debug.Log("Please derive from State and override update.");
	}

    public virtual void Enter (Enemy e) {
		Debug.Log("Please derive from State and override Enter.");
	}

    public virtual void Exit (Enemy e)  {
		Debug.Log("Please derive from State and override exit.");
	}
}

public class TestState : State {
	public TestState () {
	}
		
	public override void Update (Enemy e) {
		Transform currentPos = e.GetComponent<Transform> ();
		Vector2 target = e.vectorToPlayer ();
		Vector2 start = new Vector2 (currentPos.position.x, currentPos.position.y);
		Vector2 dirrection = target - start;

		if (dirrection.x < 0)
			e.rb.AddForce (-e.force);
		else
			e.rb.AddForce (e.force);

		Vector2 dv = e.rb.velocity;
		dv.x = Mathf.Clamp(dv.x, -1.0f, 1.0f);
		e.rb.velocity = dv;
	}
	
	public override void Enter (Enemy e) {
		Debug.Log("Entering test state.");
	}
	
	public override void Exit (Enemy e)  {
		Debug.Log("Exiting test state.");
	}
}